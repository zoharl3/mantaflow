
- Needs env var
set PYTHONHOME=c:\Python37\

- run
bin\manta c:\prj\fluid\_others3\mantaflow-master\scenes\flip01_simple.py
    - see batch files in scenes/
    
- How to Create a Mantaflow Fluid Simulation in Blender (2.82) - YouTube
https://www.youtube.com/watch?v=YdUWqkqcxzw&ab_channel=BlenderMadeEasy

- A grid is created in FluidSolver::getGridPointer(). 
    - A MAC seems to be allocated as a regular size grid. The data is kept in the centers, and the walls are interpolated, instead of the other way around.
- knMapLinearVec3ToMACGrid() has a kernel macro in the definition. This macro has a variadic param, and it's executed for every point.
- setInterpolMAC() interpolates MAC from particles. The four grid points are ref[0], ref[X], ref[Y], ref[X+Y]. 
- The output precision is set in Vector3D<S>::toString() in vectorbase.h.

- cmake
    - there's an option DEBUG_PYTHON_WITH_RELEASE for the linked lib
    
- To replay generated scenes:
flip03_gen.py

- maya plugins
    - I created a cmake
    - densityloader expects grid density not particles (see the 4-byte header).
    
- maya
    - Use bifrost graph editor to create an object from openvdb.
    - Sample data in 
c:\prj-external-libs\mantaflow\out\
    - Sample maya scenes: manta*.ma, tornado.ma
    - Change the file path of the read_openVDB node in bifrost editor
    
    
    
    
    
    